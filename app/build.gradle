apply plugin: 'com.android.application'
apply plugin: 'walle'
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        multiDexEnabled true
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        renderscriptTargetApi 19
        renderscriptSupportModeEnabled true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        manifestPlaceholders = [
                JPUSH_PKGNAME: rootProject.ext.android.applicationId,
                JPUSH_APPKEY : "4821c1614f23df0218af9985", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
        ndk {
            abiFilters "armeabi-v7a"
//            abiFilters 'armeabi','armeabi-v7a','arm64-v8a'
//            abiFilters 'armeabi-v7a','arm64-v8a'
        }
    }
    signingConfigs {
        release {
            storeFile file('fwhy.jks')
            storePassword "xmfw666@@!!"
            keyAlias "fwhy"
            keyPassword "xmfw666@@!!"
        }
        debug {
            storeFile file('fwhy.jks')
            storePassword "xmfw666@@!!"
            keyAlias "fwhy"
            keyPassword "xmfw666@@!!"
        }
    }
    buildTypes {
        //生成tinker补丁debug版时这个配置必须打开，并且移除leakcanaray依赖
//            debug {
//                zipAlignEnabled true
//                // 移除无用的resource文件
//                shrinkResources false
//                signingConfig signingConfigs.release
//                minifyEnabled false
//                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//                debuggable false
//            }

        release {
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable false
        }
    }

    flavorDimensions "channel"
    productFlavors {
        fwhy {} // 蜂窝互娱 1
        yingyongbao {} // 应用宝 2
        c360 {} // 360 3
        baidu {} // 百度 4
        huawei {} // 华为 5
        wandoujia {} //豌豆荚 6
        oppo {} //oppo 7
        meizu {} //魅族 8
        xiaomi {} //xiaomi 9
        vivo {} //vivo 10
        productFlavors.all { flavor ->
            flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        }
    }
    walle {
        // 指定渠道包的输出路径
        apkOutputFolder = new File("${project.buildDir}/outputs/channels");
        // 定制渠道包的APK的文件名称
        apkFileNameFormat = '${appName}-${packageName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}.apk';
        // 渠道配置文件
        channelFile = new File("${project.getProjectDir()}/channel")
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
  //  implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'androidx.test:runner:1.1.1'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation project(':module_comment')

    if (isModule.toBoolean()) {
        implementation project(':module_main')
        implementation project(':module_vedio')
        implementation project(':module_chat')
        implementation project(':module_live_vedio')
        implementation project(':module_login')
//        implementation project(':module_flirt')
    }



}
